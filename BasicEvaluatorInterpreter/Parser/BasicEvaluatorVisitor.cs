//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from BasicEvaluator.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace BasicEvaluatorInterpreter.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="BasicEvaluatorParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface IBasicEvaluatorVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicEvaluatorParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProg([NotNull] BasicEvaluatorParser.ProgContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionInput</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionInput([NotNull] BasicEvaluatorParser.ExpressionInputContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funDefInput</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunDefInput([NotNull] BasicEvaluatorParser.FunDefInputContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicEvaluatorParser.funDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunDef([NotNull] BasicEvaluatorParser.FunDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicEvaluatorParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgList([NotNull] BasicEvaluatorParser.ArgListContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueExpr</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueExpr([NotNull] BasicEvaluatorParser.ValueExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>variableExpr</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableExpr([NotNull] BasicEvaluatorParser.VariableExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifExpr</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfExpr([NotNull] BasicEvaluatorParser.IfExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>whileExpr</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileExpr([NotNull] BasicEvaluatorParser.WhileExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>setExpr</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetExpr([NotNull] BasicEvaluatorParser.SetExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>beginExpr</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBeginExpr([NotNull] BasicEvaluatorParser.BeginExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>operatorExpr</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorExpr([NotNull] BasicEvaluatorParser.OperatorExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functionExpr</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionExpr([NotNull] BasicEvaluatorParser.FunctionExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueOpExpr</c>
	/// labeled alternative in <see cref="BasicEvaluatorParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueOpExpr([NotNull] BasicEvaluatorParser.ValueOpExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicEvaluatorParser.valueOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueOp([NotNull] BasicEvaluatorParser.ValueOpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicEvaluatorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] BasicEvaluatorParser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicEvaluatorParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] BasicEvaluatorParser.VariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicEvaluatorParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] BasicEvaluatorParser.ValueContext context);
}
} // namespace BasicEvaluatorInterpreter.Parser
